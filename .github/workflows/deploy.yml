name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build
        run: |
          npm ci
          npm run build -- --base=/public/lp_1/

      - name: Guard dist
        run: |
          test -f dist/index.html || (echo "dist/index.html not found" && exit 1)

      - name: Install sshpass
        run: sudo apt-get update -y && sudo apt-get install -y sshpass

      - name: Prepare remote directory
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          SSH_OPTIONS="-p 2222 -o StrictHostKeyChecking=no -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa"
          REMOTE_HOME=$(sshpass -p "$PASS_CLEAN" ssh $SSH_OPTIONS "$USER_CLEAN@$HOST_CLEAN" 'printf %s "$HOME"')
          REMOTE_HOME=$(printf '%s' "$REMOTE_HOME" | tr -d '\r\n')
          if [ -n "$REMOTE_HOME" ]; then
            case "$REMOTE_PATH_CLEAN" in
              "~")
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME"
                ;;
              ~/*)
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME/${REMOTE_PATH_CLEAN#~/}"
                ;;
              *)
                REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
                ;;
            esac
          else
            REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
          fi
          PARENT_PATH=$(dirname "$REMOTE_PATH_EFFECTIVE")
          REMOTE_PATH_ESCAPED=$(printf '%q' "$REMOTE_PATH_EFFECTIVE")
          PARENT_PATH_ESCAPED=$(printf '%q' "$PARENT_PATH")
          sshpass -p "$PASS_CLEAN" ssh $SSH_OPTIONS "$USER_CLEAN@$HOST_CLEAN" "
            mkdir -p $REMOTE_PATH_ESCAPED &&
            echo 'RewriteEngine Off' > $PARENT_PATH_ESCAPED/.htaccess &&
            echo 'RewriteEngine Off' > $REMOTE_PATH_ESCAPED/.htaccess &&
            chmod 644 $PARENT_PATH_ESCAPED/.htaccess $REMOTE_PATH_ESCAPED/.htaccess
          "

      - name: Rsync Deploy
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          SSH_OPTIONS="-p 2222 -o StrictHostKeyChecking=no -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa"
          REMOTE_HOME=$(sshpass -p "$PASS_CLEAN" ssh $SSH_OPTIONS "$USER_CLEAN@$HOST_CLEAN" 'printf %s "$HOME"')
          REMOTE_HOME=$(printf '%s' "$REMOTE_HOME" | tr -d '\r\n')
          if [ -n "$REMOTE_HOME" ]; then
            case "$REMOTE_PATH_CLEAN" in
              "~")
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME"
                ;;
              ~/*)
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME/${REMOTE_PATH_CLEAN#~/}"
                ;;
              *)
                REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
                ;;
            esac
          else
            REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
          fi
          REMOTE_TARGET_ESCAPED=$(printf '%q' "$REMOTE_PATH_EFFECTIVE/")
          sshpass -p "$PASS_CLEAN" rsync -avz --delete \
            -e "ssh $SSH_OPTIONS" \
            dist/ "$USER_CLEAN@$HOST_CLEAN:$REMOTE_TARGET_ESCAPED"

      - name: Show remote listing
        env:
          WP_HOST: ${{ secrets.WP_HOST }}
          WP_USER: ${{ secrets.WP_USER }}
          WP_SSH_PASS: ${{ secrets.WP_SSH_PASS }}
          WP_REMOTE_PATH: ${{ secrets.WP_REMOTE_PATH }}
        run: |
          PASS_CLEAN=$(printf '%s' "$WP_SSH_PASS" | tr -d '\r\n')
          HOST_CLEAN=$(printf '%s' "$WP_HOST" | tr -d '\r\n')
          USER_CLEAN=$(printf '%s' "$WP_USER" | tr -d '\r\n')
          REMOTE_PATH_CLEAN=$(printf '%s' "$WP_REMOTE_PATH" | tr -d '\r\n')
          SSH_OPTIONS="-p 2222 -o StrictHostKeyChecking=no -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa"
          REMOTE_HOME=$(sshpass -p "$PASS_CLEAN" ssh $SSH_OPTIONS "$USER_CLEAN@$HOST_CLEAN" 'printf %s "$HOME"')
          REMOTE_HOME=$(printf '%s' "$REMOTE_HOME" | tr -d '\r\n')
          if [ -n "$REMOTE_HOME" ]; then
            case "$REMOTE_PATH_CLEAN" in
              "~")
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME"
                ;;
              ~/*)
                REMOTE_PATH_EFFECTIVE="$REMOTE_HOME/${REMOTE_PATH_CLEAN#~/}"
                ;;
              *)
                REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
                ;;
            esac
          else
            REMOTE_PATH_EFFECTIVE="$REMOTE_PATH_CLEAN"
          fi
          REMOTE_PATH_ESCAPED=$(printf '%q' "$REMOTE_PATH_EFFECTIVE")
          sshpass -p "$PASS_CLEAN" ssh $SSH_OPTIONS "$USER_CLEAN@$HOST_CLEAN" "
            ls -la $REMOTE_PATH_ESCAPED &&
            echo '== assets ==' &&
            ls -la $REMOTE_PATH_ESCAPED/assets || true
          "
